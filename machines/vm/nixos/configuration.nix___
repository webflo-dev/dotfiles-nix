# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];
    
  boot = {
    tmp.cleanOnBoot = true;
    loader = {
      timeout = 2;
      systemd-boot.enable = true;
      efi.canTouchEfiVariables = true;
    };
  };
  
  networking = {
    hostName = "xps13";
    networkmanager.enable = true;
    # wireless.enable = true;
  };

  # Configure console keymap
  console.keyMap = "fr";

  # Set your time zone.
  time.timeZone = "Europe/Paris";

  # Select internationalisation properties.
  i18n = {
    defaultLocale = "en_US.UTF-8";
    extraLocaleSettings = {
      LC_ADDRESS = "fr_FR.UTF-8";
      LC_IDENTIFICATION = "fr_FR.UTF-8";
      LC_MEASUREMENT = "fr_FR.UTF-8";
      LC_MONETARY = "fr_FR.UTF-8";
      LC_NAME = "fr_FR.UTF-8";
      LC_NUMERIC = "fr_FR.UTF-8";
      LC_PAPER = "fr_FR.UTF-8";
      LC_TELEPHONE = "fr_FR.UTF-8";
      LC_TIME = "fr_FR.UTF-8";
    };
  };

  # nix.settings.experimental-features = "nix-command flakes";
  
  # Allow unfree packages
  nixpkgs.config.allowUnfree = true;

  # XPS 13 9300 specificity
  boot.kernelParams = [ "mem_sleep_default=deep" ];
  hardware.enableRedistributableFirmware = true;
  # Firmware update via 'fwupdmgr'
  services.fwupd.enable = true;
  services.thermald.enable = true;
  # services.sleep-resume.i2c-designware.enable = true;
  services.fstrim.enable = true;
  # boot = {
  #   kernelModules = [ "acpi_call" ];
  #   extraModulePackage = with config.boot.kernelPackages; [ acpi_call ];
  # };
  

  # Enable CUPS to print documents.
  services.printing.enable = true;

  # Enable sound with pipewire.
  sound.enable = true;
  hardware.pulseaudio.enable = false;
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    wireplumber.enable = true;
    # If you want to use JACK applications, uncomment this
    #jack.enable = true;

    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
  };
  environment.etc = {
    "pipewire/pipewire.conf.d/92-low-latency.conf".text = ''
      context.properties = {
        default.clock.rate = 44100
        default.clock.quantum = 512
        default.clock.min-quantum = 512
        default.clock.max-quantum = 512
      }
    '';
  };


  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.florent = {
    isNormalUser = true;
    description = "Florent";
    extraGroups = [ 
      "networkmanager" 
      "wheel" 
      "audio"
      "libvirtd"
    ];
    packages = with pkgs; [
# firefox
# sassc
# go
 brightnessctl
 blueman
 rustup
 polkit_gnome
 gnome.gnome-keyring
# slack
# _1password-gui
 vscode
 microsoft-edge
 xfce.thunar
 xfce.thunar-archive-plugin
 xfce.thunar-volman
 font-manager
 unzip
 croc
 lnav
 btop
 bat
 fd
 fnm
 fzf
 gdu
 gitui
 grim
 hyprpicker
 imv
 inotify-tools
# kalc
 nnn
 podman-compose
 pulsemixer
 ranger
 ripgrep
 slurp
# spicetify-cli
# spotify
# starship
# swappy
 swaybg
 swaylock
# wezterm
 wf-recorder
 wl-clipboard
 wlr-randr
# eza
 kitty
# sniffnet
    ];
  };


  virtualisation = {
    podman.enable = true;
    libvirtd.enable = true;
  };

  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    home-manager
    neovim
    git
    curl
  ];

  programs.hyprland = {
    enable = true;
    xwayland.enable = true;
    nvidiaPatches = false;
  };
  environment.sessionVariables.NIXOS_OZONE_WL = "1";

  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };
  
  
  

  # services.openssh.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "23.05"; # Did you read the comment?

}
